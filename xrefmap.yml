### YamlMime:XRefMap
sorted: true
references:
- uid: CG.Business.CosmoDb.Repositories
  name: CG.Business.CosmoDb.Repositories
  href: api/CG.Business.CosmoDb.Repositories.html
  commentId: N:CG.Business.CosmoDb.Repositories
  fullName: CG.Business.CosmoDb.Repositories
  nameWithType: CG.Business.CosmoDb.Repositories
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3
  name: CosmoDbCrudRepository<TOptions, TModel, TKey>
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html
  commentId: T:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3
  name.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey)
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey)
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey)
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.#ctor(`0,Microsoft.Azure.Cosmos.CosmosClient)
  name: CosmoDbCrudRepository(TOptions, CosmosClient)
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3__ctor__0_Microsoft_Azure_Cosmos_CosmosClient_
  commentId: M:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.#ctor(`0,Microsoft.Azure.Cosmos.CosmosClient)
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.CosmoDbCrudRepository(TOptions, Microsoft.Azure.Cosmos.CosmosClient)
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).CosmoDbCrudRepository(TOptions, Microsoft.Azure.Cosmos.CosmosClient)
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.CosmoDbCrudRepository(TOptions, CosmosClient)
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).CosmoDbCrudRepository(TOptions, CosmosClient)
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.#ctor*
  name: CosmoDbCrudRepository
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3__ctor_
  commentId: Overload:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.#ctor
  isSpec: "True"
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.CosmoDbCrudRepository
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).CosmoDbCrudRepository
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.CosmoDbCrudRepository
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).CosmoDbCrudRepository
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.AddAsync(`1,System.Threading.CancellationToken)
  name: AddAsync(TModel, CancellationToken)
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_AddAsync__1_System_Threading_CancellationToken_
  commentId: M:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.AddAsync(`1,System.Threading.CancellationToken)
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.AddAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).AddAsync(TModel, System.Threading.CancellationToken)
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.AddAsync(TModel, CancellationToken)
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).AddAsync(TModel, CancellationToken)
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.AddAsync*
  name: AddAsync
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_AddAsync_
  commentId: Overload:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.AddAsync
  isSpec: "True"
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.AddAsync
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).AddAsync
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.AddAsync
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).AddAsync
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.AsQueryable
  name: AsQueryable()
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_AsQueryable
  commentId: M:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.AsQueryable
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.AsQueryable()
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).AsQueryable()
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.AsQueryable()
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).AsQueryable()
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.AsQueryable*
  name: AsQueryable
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_AsQueryable_
  commentId: Overload:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.AsQueryable
  isSpec: "True"
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.AsQueryable
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).AsQueryable
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.AsQueryable
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).AsQueryable
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.Client
  name: Client
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_Client
  commentId: P:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.Client
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.Client
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).Client
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.Client
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).Client
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.Client*
  name: Client
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_Client_
  commentId: Overload:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.Client
  isSpec: "True"
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.Client
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).Client
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.Client
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).Client
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.Container
  name: Container
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_Container
  commentId: P:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.Container
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.Container
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).Container
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.Container
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).Container
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.Container*
  name: Container
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_Container_
  commentId: Overload:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.Container
  isSpec: "True"
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.Container
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).Container
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.Container
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).Container
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.ContainerChecked
  name: ContainerChecked
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_ContainerChecked
  commentId: P:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.ContainerChecked
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.ContainerChecked
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).ContainerChecked
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.ContainerChecked
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).ContainerChecked
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.ContainerChecked*
  name: ContainerChecked
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_ContainerChecked_
  commentId: Overload:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.ContainerChecked
  isSpec: "True"
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.ContainerChecked
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).ContainerChecked
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.ContainerChecked
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).ContainerChecked
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.ContainerName
  name: ContainerName
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_ContainerName
  commentId: P:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.ContainerName
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.ContainerName
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).ContainerName
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.ContainerName
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).ContainerName
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.ContainerName*
  name: ContainerName
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_ContainerName_
  commentId: Overload:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.ContainerName
  isSpec: "True"
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.ContainerName
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).ContainerName
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.ContainerName
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).ContainerName
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.Database
  name: Database
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_Database
  commentId: P:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.Database
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.Database
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).Database
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.Database
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).Database
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.Database*
  name: Database
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_Database_
  commentId: Overload:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.Database
  isSpec: "True"
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.Database
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).Database
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.Database
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).Database
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.DatabaseChecked
  name: DatabaseChecked
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_DatabaseChecked
  commentId: P:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.DatabaseChecked
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.DatabaseChecked
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).DatabaseChecked
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.DatabaseChecked
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).DatabaseChecked
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.DatabaseChecked*
  name: DatabaseChecked
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_DatabaseChecked_
  commentId: Overload:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.DatabaseChecked
  isSpec: "True"
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.DatabaseChecked
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).DatabaseChecked
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.DatabaseChecked
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).DatabaseChecked
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.DeleteAsync(`1,System.Threading.CancellationToken)
  name: DeleteAsync(TModel, CancellationToken)
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_DeleteAsync__1_System_Threading_CancellationToken_
  commentId: M:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.DeleteAsync(`1,System.Threading.CancellationToken)
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.DeleteAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).DeleteAsync(TModel, System.Threading.CancellationToken)
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.DeleteAsync(TModel, CancellationToken)
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).DeleteAsync(TModel, CancellationToken)
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.DeleteAsync*
  name: DeleteAsync
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_DeleteAsync_
  commentId: Overload:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.DeleteAsync
  isSpec: "True"
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.DeleteAsync
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).DeleteAsync
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.DeleteAsync
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).DeleteAsync
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_Dispose_System_Boolean_
  commentId: M:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.Dispose(System.Boolean)
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.Dispose(System.Boolean)
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).Dispose(System.Boolean)
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.Dispose(Boolean)
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).Dispose(Boolean)
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.Dispose*
  name: Dispose
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_Dispose_
  commentId: Overload:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.Dispose
  isSpec: "True"
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.Dispose
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).Dispose
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.Dispose
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).Dispose
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.UpdateAsync(`1,System.Threading.CancellationToken)
  name: UpdateAsync(TModel, CancellationToken)
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_UpdateAsync__1_System_Threading_CancellationToken_
  commentId: M:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.UpdateAsync(`1,System.Threading.CancellationToken)
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.UpdateAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).UpdateAsync(TModel, System.Threading.CancellationToken)
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.UpdateAsync(TModel, CancellationToken)
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).UpdateAsync(TModel, CancellationToken)
- uid: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.UpdateAsync*
  name: UpdateAsync
  href: api/CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository-3.html#CG_Business_CosmoDb_Repositories_CosmoDbCrudRepository_3_UpdateAsync_
  commentId: Overload:CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository`3.UpdateAsync
  isSpec: "True"
  fullName: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository<TOptions, TModel, TKey>.UpdateAsync
  fullName.vb: CG.Business.CosmoDb.Repositories.CosmoDbCrudRepository(Of TOptions, TModel, TKey).UpdateAsync
  nameWithType: CosmoDbCrudRepository<TOptions, TModel, TKey>.UpdateAsync
  nameWithType.vb: CosmoDbCrudRepository(Of TOptions, TModel, TKey).UpdateAsync
- uid: CG.Linq.CosmoDb.Repositories
  name: CG.Linq.CosmoDb.Repositories
  href: api/CG.Linq.CosmoDb.Repositories.html
  commentId: N:CG.Linq.CosmoDb.Repositories
  fullName: CG.Linq.CosmoDb.Repositories
  nameWithType: CG.Linq.CosmoDb.Repositories
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2
  name: CosmoDbRepository<TOptions, TModel>
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepository-2.html
  commentId: T:CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2
  name.vb: CosmoDbRepository(Of TOptions, TModel)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepository<TOptions, TModel>
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepository(Of TOptions, TModel)
  nameWithType: CosmoDbRepository<TOptions, TModel>
  nameWithType.vb: CosmoDbRepository(Of TOptions, TModel)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.#ctor(`0,Microsoft.Azure.Cosmos.CosmosClient)
  name: CosmoDbRepository(TOptions, CosmosClient)
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepository-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepository_2__ctor__0_Microsoft_Azure_Cosmos_CosmosClient_
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.#ctor(`0,Microsoft.Azure.Cosmos.CosmosClient)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepository<TOptions, TModel>.CosmoDbRepository(TOptions, Microsoft.Azure.Cosmos.CosmosClient)
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepository(Of TOptions, TModel).CosmoDbRepository(TOptions, Microsoft.Azure.Cosmos.CosmosClient)
  nameWithType: CosmoDbRepository<TOptions, TModel>.CosmoDbRepository(TOptions, CosmosClient)
  nameWithType.vb: CosmoDbRepository(Of TOptions, TModel).CosmoDbRepository(TOptions, CosmosClient)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.#ctor*
  name: CosmoDbRepository
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepository-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepository_2__ctor_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.#ctor
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepository<TOptions, TModel>.CosmoDbRepository
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepository(Of TOptions, TModel).CosmoDbRepository
  nameWithType: CosmoDbRepository<TOptions, TModel>.CosmoDbRepository
  nameWithType.vb: CosmoDbRepository(Of TOptions, TModel).CosmoDbRepository
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.AsQueryable
  name: AsQueryable()
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepository-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepository_2_AsQueryable
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.AsQueryable
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepository<TOptions, TModel>.AsQueryable()
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepository(Of TOptions, TModel).AsQueryable()
  nameWithType: CosmoDbRepository<TOptions, TModel>.AsQueryable()
  nameWithType.vb: CosmoDbRepository(Of TOptions, TModel).AsQueryable()
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.AsQueryable*
  name: AsQueryable
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepository-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepository_2_AsQueryable_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.AsQueryable
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepository<TOptions, TModel>.AsQueryable
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepository(Of TOptions, TModel).AsQueryable
  nameWithType: CosmoDbRepository<TOptions, TModel>.AsQueryable
  nameWithType.vb: CosmoDbRepository(Of TOptions, TModel).AsQueryable
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.Client
  name: Client
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepository-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepository_2_Client
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.Client
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepository<TOptions, TModel>.Client
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepository(Of TOptions, TModel).Client
  nameWithType: CosmoDbRepository<TOptions, TModel>.Client
  nameWithType.vb: CosmoDbRepository(Of TOptions, TModel).Client
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.Client*
  name: Client
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepository-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepository_2_Client_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.Client
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepository<TOptions, TModel>.Client
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepository(Of TOptions, TModel).Client
  nameWithType: CosmoDbRepository<TOptions, TModel>.Client
  nameWithType.vb: CosmoDbRepository(Of TOptions, TModel).Client
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.Container
  name: Container
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepository-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepository_2_Container
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.Container
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepository<TOptions, TModel>.Container
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepository(Of TOptions, TModel).Container
  nameWithType: CosmoDbRepository<TOptions, TModel>.Container
  nameWithType.vb: CosmoDbRepository(Of TOptions, TModel).Container
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.Container*
  name: Container
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepository-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepository_2_Container_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.Container
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepository<TOptions, TModel>.Container
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepository(Of TOptions, TModel).Container
  nameWithType: CosmoDbRepository<TOptions, TModel>.Container
  nameWithType.vb: CosmoDbRepository(Of TOptions, TModel).Container
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.ContainerChecked
  name: ContainerChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepository-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepository_2_ContainerChecked
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.ContainerChecked
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepository<TOptions, TModel>.ContainerChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepository(Of TOptions, TModel).ContainerChecked
  nameWithType: CosmoDbRepository<TOptions, TModel>.ContainerChecked
  nameWithType.vb: CosmoDbRepository(Of TOptions, TModel).ContainerChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.ContainerChecked*
  name: ContainerChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepository-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepository_2_ContainerChecked_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.ContainerChecked
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepository<TOptions, TModel>.ContainerChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepository(Of TOptions, TModel).ContainerChecked
  nameWithType: CosmoDbRepository<TOptions, TModel>.ContainerChecked
  nameWithType.vb: CosmoDbRepository(Of TOptions, TModel).ContainerChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.ContainerName
  name: ContainerName
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepository-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepository_2_ContainerName
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.ContainerName
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepository<TOptions, TModel>.ContainerName
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepository(Of TOptions, TModel).ContainerName
  nameWithType: CosmoDbRepository<TOptions, TModel>.ContainerName
  nameWithType.vb: CosmoDbRepository(Of TOptions, TModel).ContainerName
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.ContainerName*
  name: ContainerName
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepository-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepository_2_ContainerName_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.ContainerName
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepository<TOptions, TModel>.ContainerName
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepository(Of TOptions, TModel).ContainerName
  nameWithType: CosmoDbRepository<TOptions, TModel>.ContainerName
  nameWithType.vb: CosmoDbRepository(Of TOptions, TModel).ContainerName
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.Database
  name: Database
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepository-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepository_2_Database
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.Database
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepository<TOptions, TModel>.Database
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepository(Of TOptions, TModel).Database
  nameWithType: CosmoDbRepository<TOptions, TModel>.Database
  nameWithType.vb: CosmoDbRepository(Of TOptions, TModel).Database
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.Database*
  name: Database
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepository-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepository_2_Database_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.Database
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepository<TOptions, TModel>.Database
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepository(Of TOptions, TModel).Database
  nameWithType: CosmoDbRepository<TOptions, TModel>.Database
  nameWithType.vb: CosmoDbRepository(Of TOptions, TModel).Database
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.DatabaseChecked
  name: DatabaseChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepository-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepository_2_DatabaseChecked
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.DatabaseChecked
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepository<TOptions, TModel>.DatabaseChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepository(Of TOptions, TModel).DatabaseChecked
  nameWithType: CosmoDbRepository<TOptions, TModel>.DatabaseChecked
  nameWithType.vb: CosmoDbRepository(Of TOptions, TModel).DatabaseChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.DatabaseChecked*
  name: DatabaseChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepository-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepository_2_DatabaseChecked_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.DatabaseChecked
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepository<TOptions, TModel>.DatabaseChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepository(Of TOptions, TModel).DatabaseChecked
  nameWithType: CosmoDbRepository<TOptions, TModel>.DatabaseChecked
  nameWithType.vb: CosmoDbRepository(Of TOptions, TModel).DatabaseChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepository-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepository_2_Dispose_System_Boolean_
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.Dispose(System.Boolean)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepository<TOptions, TModel>.Dispose(System.Boolean)
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepository(Of TOptions, TModel).Dispose(System.Boolean)
  nameWithType: CosmoDbRepository<TOptions, TModel>.Dispose(Boolean)
  nameWithType.vb: CosmoDbRepository(Of TOptions, TModel).Dispose(Boolean)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.Dispose*
  name: Dispose
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepository-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepository_2_Dispose_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbRepository`2.Dispose
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepository<TOptions, TModel>.Dispose
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepository(Of TOptions, TModel).Dispose
  nameWithType: CosmoDbRepository<TOptions, TModel>.Dispose
  nameWithType.vb: CosmoDbRepository(Of TOptions, TModel).Dispose
- uid: CG.Linq.CosmoDb.Repositories.Options
  name: CG.Linq.CosmoDb.Repositories.Options
  href: api/CG.Linq.CosmoDb.Repositories.Options.html
  commentId: N:CG.Linq.CosmoDb.Repositories.Options
  fullName: CG.Linq.CosmoDb.Repositories.Options
  nameWithType: CG.Linq.CosmoDb.Repositories.Options
- uid: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions
  name: CosmoDbRepositoryOptions
  href: api/CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.html
  commentId: T:CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions
  fullName: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions
  nameWithType: CosmoDbRepositoryOptions
- uid: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.DatabaseId
  name: DatabaseId
  href: api/CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.html#CG_Linq_CosmoDb_Repositories_Options_CosmoDbRepositoryOptions_DatabaseId
  commentId: P:CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.DatabaseId
  fullName: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.DatabaseId
  nameWithType: CosmoDbRepositoryOptions.DatabaseId
- uid: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.DatabaseId*
  name: DatabaseId
  href: api/CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.html#CG_Linq_CosmoDb_Repositories_Options_CosmoDbRepositoryOptions_DatabaseId_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.DatabaseId
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.DatabaseId
  nameWithType: CosmoDbRepositoryOptions.DatabaseId

### YamlMime:XRefMap
sorted: true
references:
- uid: CG.Linq.CosmoDb.Repositories
  name: CG.Linq.CosmoDb.Repositories
  href: api/CG.Linq.CosmoDb.Repositories.html
  commentId: N:CG.Linq.CosmoDb.Repositories
  fullName: CG.Linq.CosmoDb.Repositories
  nameWithType: CG.Linq.CosmoDb.Repositories
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3
  name: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html
  commentId: T:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3
  name.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey)
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.#ctor(`0,Microsoft.Azure.Cosmos.CosmosClient)
  name: CosmoDbCrudRepositoryBase(TOptions, CosmosClient)
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3__ctor__0_Microsoft_Azure_Cosmos_CosmosClient_
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.#ctor(`0,Microsoft.Azure.Cosmos.CosmosClient)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.CosmoDbCrudRepositoryBase(TOptions, Microsoft.Azure.Cosmos.CosmosClient)
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).CosmoDbCrudRepositoryBase(TOptions, Microsoft.Azure.Cosmos.CosmosClient)
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.CosmoDbCrudRepositoryBase(TOptions, CosmosClient)
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).CosmoDbCrudRepositoryBase(TOptions, CosmosClient)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.#ctor*
  name: CosmoDbCrudRepositoryBase
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3__ctor_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.#ctor
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.CosmoDbCrudRepositoryBase
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).CosmoDbCrudRepositoryBase
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.CosmoDbCrudRepositoryBase
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).CosmoDbCrudRepositoryBase
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.AddAsync(`1,System.Threading.CancellationToken)
  name: AddAsync(TModel, CancellationToken)
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_AddAsync__1_System_Threading_CancellationToken_
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.AddAsync(`1,System.Threading.CancellationToken)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.AddAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).AddAsync(TModel, System.Threading.CancellationToken)
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.AddAsync(TModel, CancellationToken)
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).AddAsync(TModel, CancellationToken)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.AddAsync*
  name: AddAsync
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_AddAsync_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.AddAsync
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.AddAsync
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).AddAsync
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.AddAsync
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).AddAsync
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.AsQueryable
  name: AsQueryable()
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_AsQueryable
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.AsQueryable
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.AsQueryable()
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).AsQueryable()
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.AsQueryable()
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).AsQueryable()
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.AsQueryable*
  name: AsQueryable
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_AsQueryable_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.AsQueryable
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.AsQueryable
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).AsQueryable
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.AsQueryable
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).AsQueryable
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.Client
  name: Client
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_Client
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.Client
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.Client
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).Client
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.Client
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).Client
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.Client*
  name: Client
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_Client_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.Client
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.Client
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).Client
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.Client
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).Client
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.Container
  name: Container
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_Container
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.Container
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.Container
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).Container
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.Container
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).Container
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.Container*
  name: Container
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_Container_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.Container
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.Container
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).Container
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.Container
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).Container
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.ContainerChecked
  name: ContainerChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_ContainerChecked
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.ContainerChecked
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.ContainerChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).ContainerChecked
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.ContainerChecked
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).ContainerChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.ContainerChecked*
  name: ContainerChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_ContainerChecked_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.ContainerChecked
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.ContainerChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).ContainerChecked
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.ContainerChecked
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).ContainerChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.ContainerName
  name: ContainerName
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_ContainerName
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.ContainerName
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.ContainerName
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).ContainerName
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.ContainerName
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).ContainerName
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.ContainerName*
  name: ContainerName
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_ContainerName_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.ContainerName
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.ContainerName
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).ContainerName
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.ContainerName
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).ContainerName
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.Database
  name: Database
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_Database
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.Database
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.Database
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).Database
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.Database
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).Database
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.Database*
  name: Database
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_Database_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.Database
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.Database
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).Database
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.Database
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).Database
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.DatabaseChecked
  name: DatabaseChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_DatabaseChecked
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.DatabaseChecked
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.DatabaseChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).DatabaseChecked
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.DatabaseChecked
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).DatabaseChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.DatabaseChecked*
  name: DatabaseChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_DatabaseChecked_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.DatabaseChecked
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.DatabaseChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).DatabaseChecked
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.DatabaseChecked
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).DatabaseChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.DeleteAsync(`1,System.Threading.CancellationToken)
  name: DeleteAsync(TModel, CancellationToken)
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_DeleteAsync__1_System_Threading_CancellationToken_
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.DeleteAsync(`1,System.Threading.CancellationToken)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.DeleteAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).DeleteAsync(TModel, System.Threading.CancellationToken)
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.DeleteAsync(TModel, CancellationToken)
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).DeleteAsync(TModel, CancellationToken)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.DeleteAsync*
  name: DeleteAsync
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_DeleteAsync_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.DeleteAsync
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.DeleteAsync
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).DeleteAsync
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.DeleteAsync
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).DeleteAsync
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_Dispose_System_Boolean_
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.Dispose(System.Boolean)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.Dispose(System.Boolean)
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).Dispose(System.Boolean)
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.Dispose(Boolean)
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).Dispose(Boolean)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.Dispose*
  name: Dispose
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_Dispose_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.Dispose
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.Dispose
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).Dispose
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.Dispose
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).Dispose
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.UpdateAsync(`1,System.Threading.CancellationToken)
  name: UpdateAsync(TModel, CancellationToken)
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_UpdateAsync__1_System_Threading_CancellationToken_
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.UpdateAsync(`1,System.Threading.CancellationToken)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.UpdateAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).UpdateAsync(TModel, System.Threading.CancellationToken)
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.UpdateAsync(TModel, CancellationToken)
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).UpdateAsync(TModel, CancellationToken)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.UpdateAsync*
  name: UpdateAsync
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-3.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_3_UpdateAsync_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`3.UpdateAsync
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.UpdateAsync
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).UpdateAsync
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey>.UpdateAsync
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey).UpdateAsync
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4
  name: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html
  commentId: T:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4
  name.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2)
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.#ctor(`0,Microsoft.Azure.Cosmos.CosmosClient)
  name: CosmoDbCrudRepositoryBase(TOptions, CosmosClient)
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4__ctor__0_Microsoft_Azure_Cosmos_CosmosClient_
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.#ctor(`0,Microsoft.Azure.Cosmos.CosmosClient)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.CosmoDbCrudRepositoryBase(TOptions, Microsoft.Azure.Cosmos.CosmosClient)
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).CosmoDbCrudRepositoryBase(TOptions, Microsoft.Azure.Cosmos.CosmosClient)
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.CosmoDbCrudRepositoryBase(TOptions, CosmosClient)
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).CosmoDbCrudRepositoryBase(TOptions, CosmosClient)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.#ctor*
  name: CosmoDbCrudRepositoryBase
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4__ctor_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.#ctor
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.CosmoDbCrudRepositoryBase
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).CosmoDbCrudRepositoryBase
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.CosmoDbCrudRepositoryBase
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).CosmoDbCrudRepositoryBase
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.AddAsync(`1,System.Threading.CancellationToken)
  name: AddAsync(TModel, CancellationToken)
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_AddAsync__1_System_Threading_CancellationToken_
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.AddAsync(`1,System.Threading.CancellationToken)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.AddAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).AddAsync(TModel, System.Threading.CancellationToken)
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.AddAsync(TModel, CancellationToken)
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).AddAsync(TModel, CancellationToken)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.AddAsync*
  name: AddAsync
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_AddAsync_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.AddAsync
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.AddAsync
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).AddAsync
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.AddAsync
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).AddAsync
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.AsQueryable
  name: AsQueryable()
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_AsQueryable
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.AsQueryable
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.AsQueryable()
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).AsQueryable()
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.AsQueryable()
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).AsQueryable()
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.AsQueryable*
  name: AsQueryable
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_AsQueryable_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.AsQueryable
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.AsQueryable
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).AsQueryable
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.AsQueryable
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).AsQueryable
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.Client
  name: Client
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_Client
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.Client
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.Client
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).Client
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.Client
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).Client
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.Client*
  name: Client
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_Client_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.Client
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.Client
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).Client
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.Client
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).Client
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.Container
  name: Container
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_Container
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.Container
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.Container
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).Container
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.Container
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).Container
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.Container*
  name: Container
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_Container_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.Container
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.Container
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).Container
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.Container
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).Container
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.ContainerChecked
  name: ContainerChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_ContainerChecked
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.ContainerChecked
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.ContainerChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).ContainerChecked
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.ContainerChecked
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).ContainerChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.ContainerChecked*
  name: ContainerChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_ContainerChecked_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.ContainerChecked
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.ContainerChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).ContainerChecked
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.ContainerChecked
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).ContainerChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.ContainerName
  name: ContainerName
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_ContainerName
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.ContainerName
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.ContainerName
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).ContainerName
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.ContainerName
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).ContainerName
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.ContainerName*
  name: ContainerName
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_ContainerName_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.ContainerName
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.ContainerName
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).ContainerName
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.ContainerName
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).ContainerName
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.Database
  name: Database
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_Database
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.Database
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.Database
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).Database
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.Database
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).Database
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.Database*
  name: Database
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_Database_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.Database
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.Database
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).Database
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.Database
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).Database
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.DatabaseChecked
  name: DatabaseChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_DatabaseChecked
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.DatabaseChecked
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.DatabaseChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).DatabaseChecked
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.DatabaseChecked
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).DatabaseChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.DatabaseChecked*
  name: DatabaseChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_DatabaseChecked_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.DatabaseChecked
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.DatabaseChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).DatabaseChecked
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.DatabaseChecked
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).DatabaseChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.DeleteAsync(`1,System.Threading.CancellationToken)
  name: DeleteAsync(TModel, CancellationToken)
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_DeleteAsync__1_System_Threading_CancellationToken_
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.DeleteAsync(`1,System.Threading.CancellationToken)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.DeleteAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).DeleteAsync(TModel, System.Threading.CancellationToken)
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.DeleteAsync(TModel, CancellationToken)
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).DeleteAsync(TModel, CancellationToken)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.DeleteAsync*
  name: DeleteAsync
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_DeleteAsync_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.DeleteAsync
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.DeleteAsync
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).DeleteAsync
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.DeleteAsync
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).DeleteAsync
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_Dispose_System_Boolean_
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.Dispose(System.Boolean)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.Dispose(System.Boolean)
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).Dispose(System.Boolean)
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.Dispose(Boolean)
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).Dispose(Boolean)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.Dispose*
  name: Dispose
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_Dispose_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.Dispose
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.Dispose
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).Dispose
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.Dispose
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).Dispose
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.UpdateAsync(`1,System.Threading.CancellationToken)
  name: UpdateAsync(TModel, CancellationToken)
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_UpdateAsync__1_System_Threading_CancellationToken_
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.UpdateAsync(`1,System.Threading.CancellationToken)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.UpdateAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).UpdateAsync(TModel, System.Threading.CancellationToken)
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.UpdateAsync(TModel, CancellationToken)
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).UpdateAsync(TModel, CancellationToken)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.UpdateAsync*
  name: UpdateAsync
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-4.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_4_UpdateAsync_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`4.UpdateAsync
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.UpdateAsync
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).UpdateAsync
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.UpdateAsync
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2).UpdateAsync
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5
  name: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html
  commentId: T:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5
  name.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3)
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.#ctor(`0,Microsoft.Azure.Cosmos.CosmosClient)
  name: CosmoDbCrudRepositoryBase(TOptions, CosmosClient)
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5__ctor__0_Microsoft_Azure_Cosmos_CosmosClient_
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.#ctor(`0,Microsoft.Azure.Cosmos.CosmosClient)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.CosmoDbCrudRepositoryBase(TOptions, Microsoft.Azure.Cosmos.CosmosClient)
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).CosmoDbCrudRepositoryBase(TOptions, Microsoft.Azure.Cosmos.CosmosClient)
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.CosmoDbCrudRepositoryBase(TOptions, CosmosClient)
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).CosmoDbCrudRepositoryBase(TOptions, CosmosClient)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.#ctor*
  name: CosmoDbCrudRepositoryBase
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5__ctor_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.#ctor
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.CosmoDbCrudRepositoryBase
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).CosmoDbCrudRepositoryBase
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.CosmoDbCrudRepositoryBase
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).CosmoDbCrudRepositoryBase
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.AddAsync(`1,System.Threading.CancellationToken)
  name: AddAsync(TModel, CancellationToken)
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_AddAsync__1_System_Threading_CancellationToken_
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.AddAsync(`1,System.Threading.CancellationToken)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.AddAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).AddAsync(TModel, System.Threading.CancellationToken)
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.AddAsync(TModel, CancellationToken)
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).AddAsync(TModel, CancellationToken)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.AddAsync*
  name: AddAsync
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_AddAsync_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.AddAsync
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.AddAsync
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).AddAsync
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.AddAsync
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).AddAsync
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.AsQueryable
  name: AsQueryable()
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_AsQueryable
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.AsQueryable
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.AsQueryable()
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).AsQueryable()
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.AsQueryable()
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).AsQueryable()
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.AsQueryable*
  name: AsQueryable
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_AsQueryable_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.AsQueryable
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.AsQueryable
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).AsQueryable
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.AsQueryable
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).AsQueryable
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.Client
  name: Client
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_Client
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.Client
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.Client
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).Client
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.Client
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).Client
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.Client*
  name: Client
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_Client_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.Client
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.Client
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).Client
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.Client
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).Client
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.Container
  name: Container
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_Container
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.Container
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.Container
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).Container
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.Container
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).Container
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.Container*
  name: Container
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_Container_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.Container
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.Container
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).Container
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.Container
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).Container
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.ContainerChecked
  name: ContainerChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_ContainerChecked
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.ContainerChecked
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.ContainerChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).ContainerChecked
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.ContainerChecked
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).ContainerChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.ContainerChecked*
  name: ContainerChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_ContainerChecked_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.ContainerChecked
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.ContainerChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).ContainerChecked
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.ContainerChecked
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).ContainerChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.ContainerName
  name: ContainerName
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_ContainerName
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.ContainerName
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.ContainerName
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).ContainerName
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.ContainerName
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).ContainerName
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.ContainerName*
  name: ContainerName
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_ContainerName_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.ContainerName
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.ContainerName
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).ContainerName
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.ContainerName
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).ContainerName
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.Database
  name: Database
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_Database
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.Database
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.Database
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).Database
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.Database
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).Database
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.Database*
  name: Database
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_Database_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.Database
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.Database
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).Database
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.Database
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).Database
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.DatabaseChecked
  name: DatabaseChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_DatabaseChecked
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.DatabaseChecked
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.DatabaseChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).DatabaseChecked
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.DatabaseChecked
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).DatabaseChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.DatabaseChecked*
  name: DatabaseChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_DatabaseChecked_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.DatabaseChecked
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.DatabaseChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).DatabaseChecked
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.DatabaseChecked
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).DatabaseChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.DeleteAsync(`1,System.Threading.CancellationToken)
  name: DeleteAsync(TModel, CancellationToken)
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_DeleteAsync__1_System_Threading_CancellationToken_
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.DeleteAsync(`1,System.Threading.CancellationToken)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.DeleteAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).DeleteAsync(TModel, System.Threading.CancellationToken)
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.DeleteAsync(TModel, CancellationToken)
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).DeleteAsync(TModel, CancellationToken)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.DeleteAsync*
  name: DeleteAsync
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_DeleteAsync_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.DeleteAsync
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.DeleteAsync
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).DeleteAsync
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.DeleteAsync
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).DeleteAsync
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_Dispose_System_Boolean_
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.Dispose(System.Boolean)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.Dispose(System.Boolean)
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).Dispose(System.Boolean)
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.Dispose(Boolean)
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).Dispose(Boolean)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.Dispose*
  name: Dispose
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_Dispose_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.Dispose
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.Dispose
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).Dispose
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.Dispose
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).Dispose
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.UpdateAsync(`1,System.Threading.CancellationToken)
  name: UpdateAsync(TModel, CancellationToken)
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_UpdateAsync__1_System_Threading_CancellationToken_
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.UpdateAsync(`1,System.Threading.CancellationToken)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.UpdateAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).UpdateAsync(TModel, System.Threading.CancellationToken)
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.UpdateAsync(TModel, CancellationToken)
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).UpdateAsync(TModel, CancellationToken)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.UpdateAsync*
  name: UpdateAsync
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase-5.html#CG_Linq_CosmoDb_Repositories_CosmoDbCrudRepositoryBase_5_UpdateAsync_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase`5.UpdateAsync
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.UpdateAsync
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).UpdateAsync
  nameWithType: CosmoDbCrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.UpdateAsync
  nameWithType.vb: CosmoDbCrudRepositoryBase(Of TOptions, TModel, TKey1, TKey2, TKey3).UpdateAsync
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2
  name: CosmoDbRepositoryBase<TOptions, TModel>
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase-2.html
  commentId: T:CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2
  name.vb: CosmoDbRepositoryBase(Of TOptions, TModel)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase<TOptions, TModel>
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase(Of TOptions, TModel)
  nameWithType: CosmoDbRepositoryBase<TOptions, TModel>
  nameWithType.vb: CosmoDbRepositoryBase(Of TOptions, TModel)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.#ctor(`0,Microsoft.Azure.Cosmos.CosmosClient)
  name: CosmoDbRepositoryBase(TOptions, CosmosClient)
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepositoryBase_2__ctor__0_Microsoft_Azure_Cosmos_CosmosClient_
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.#ctor(`0,Microsoft.Azure.Cosmos.CosmosClient)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase<TOptions, TModel>.CosmoDbRepositoryBase(TOptions, Microsoft.Azure.Cosmos.CosmosClient)
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase(Of TOptions, TModel).CosmoDbRepositoryBase(TOptions, Microsoft.Azure.Cosmos.CosmosClient)
  nameWithType: CosmoDbRepositoryBase<TOptions, TModel>.CosmoDbRepositoryBase(TOptions, CosmosClient)
  nameWithType.vb: CosmoDbRepositoryBase(Of TOptions, TModel).CosmoDbRepositoryBase(TOptions, CosmosClient)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.#ctor*
  name: CosmoDbRepositoryBase
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepositoryBase_2__ctor_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.#ctor
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase<TOptions, TModel>.CosmoDbRepositoryBase
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase(Of TOptions, TModel).CosmoDbRepositoryBase
  nameWithType: CosmoDbRepositoryBase<TOptions, TModel>.CosmoDbRepositoryBase
  nameWithType.vb: CosmoDbRepositoryBase(Of TOptions, TModel).CosmoDbRepositoryBase
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.AsQueryable
  name: AsQueryable()
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepositoryBase_2_AsQueryable
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.AsQueryable
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase<TOptions, TModel>.AsQueryable()
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase(Of TOptions, TModel).AsQueryable()
  nameWithType: CosmoDbRepositoryBase<TOptions, TModel>.AsQueryable()
  nameWithType.vb: CosmoDbRepositoryBase(Of TOptions, TModel).AsQueryable()
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.AsQueryable*
  name: AsQueryable
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepositoryBase_2_AsQueryable_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.AsQueryable
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase<TOptions, TModel>.AsQueryable
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase(Of TOptions, TModel).AsQueryable
  nameWithType: CosmoDbRepositoryBase<TOptions, TModel>.AsQueryable
  nameWithType.vb: CosmoDbRepositoryBase(Of TOptions, TModel).AsQueryable
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.Client
  name: Client
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepositoryBase_2_Client
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.Client
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase<TOptions, TModel>.Client
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase(Of TOptions, TModel).Client
  nameWithType: CosmoDbRepositoryBase<TOptions, TModel>.Client
  nameWithType.vb: CosmoDbRepositoryBase(Of TOptions, TModel).Client
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.Client*
  name: Client
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepositoryBase_2_Client_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.Client
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase<TOptions, TModel>.Client
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase(Of TOptions, TModel).Client
  nameWithType: CosmoDbRepositoryBase<TOptions, TModel>.Client
  nameWithType.vb: CosmoDbRepositoryBase(Of TOptions, TModel).Client
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.Container
  name: Container
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepositoryBase_2_Container
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.Container
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase<TOptions, TModel>.Container
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase(Of TOptions, TModel).Container
  nameWithType: CosmoDbRepositoryBase<TOptions, TModel>.Container
  nameWithType.vb: CosmoDbRepositoryBase(Of TOptions, TModel).Container
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.Container*
  name: Container
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepositoryBase_2_Container_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.Container
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase<TOptions, TModel>.Container
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase(Of TOptions, TModel).Container
  nameWithType: CosmoDbRepositoryBase<TOptions, TModel>.Container
  nameWithType.vb: CosmoDbRepositoryBase(Of TOptions, TModel).Container
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.ContainerChecked
  name: ContainerChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepositoryBase_2_ContainerChecked
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.ContainerChecked
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase<TOptions, TModel>.ContainerChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase(Of TOptions, TModel).ContainerChecked
  nameWithType: CosmoDbRepositoryBase<TOptions, TModel>.ContainerChecked
  nameWithType.vb: CosmoDbRepositoryBase(Of TOptions, TModel).ContainerChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.ContainerChecked*
  name: ContainerChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepositoryBase_2_ContainerChecked_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.ContainerChecked
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase<TOptions, TModel>.ContainerChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase(Of TOptions, TModel).ContainerChecked
  nameWithType: CosmoDbRepositoryBase<TOptions, TModel>.ContainerChecked
  nameWithType.vb: CosmoDbRepositoryBase(Of TOptions, TModel).ContainerChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.ContainerName
  name: ContainerName
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepositoryBase_2_ContainerName
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.ContainerName
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase<TOptions, TModel>.ContainerName
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase(Of TOptions, TModel).ContainerName
  nameWithType: CosmoDbRepositoryBase<TOptions, TModel>.ContainerName
  nameWithType.vb: CosmoDbRepositoryBase(Of TOptions, TModel).ContainerName
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.ContainerName*
  name: ContainerName
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepositoryBase_2_ContainerName_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.ContainerName
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase<TOptions, TModel>.ContainerName
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase(Of TOptions, TModel).ContainerName
  nameWithType: CosmoDbRepositoryBase<TOptions, TModel>.ContainerName
  nameWithType.vb: CosmoDbRepositoryBase(Of TOptions, TModel).ContainerName
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.Database
  name: Database
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepositoryBase_2_Database
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.Database
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase<TOptions, TModel>.Database
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase(Of TOptions, TModel).Database
  nameWithType: CosmoDbRepositoryBase<TOptions, TModel>.Database
  nameWithType.vb: CosmoDbRepositoryBase(Of TOptions, TModel).Database
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.Database*
  name: Database
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepositoryBase_2_Database_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.Database
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase<TOptions, TModel>.Database
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase(Of TOptions, TModel).Database
  nameWithType: CosmoDbRepositoryBase<TOptions, TModel>.Database
  nameWithType.vb: CosmoDbRepositoryBase(Of TOptions, TModel).Database
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.DatabaseChecked
  name: DatabaseChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepositoryBase_2_DatabaseChecked
  commentId: P:CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.DatabaseChecked
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase<TOptions, TModel>.DatabaseChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase(Of TOptions, TModel).DatabaseChecked
  nameWithType: CosmoDbRepositoryBase<TOptions, TModel>.DatabaseChecked
  nameWithType.vb: CosmoDbRepositoryBase(Of TOptions, TModel).DatabaseChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.DatabaseChecked*
  name: DatabaseChecked
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepositoryBase_2_DatabaseChecked_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.DatabaseChecked
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase<TOptions, TModel>.DatabaseChecked
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase(Of TOptions, TModel).DatabaseChecked
  nameWithType: CosmoDbRepositoryBase<TOptions, TModel>.DatabaseChecked
  nameWithType.vb: CosmoDbRepositoryBase(Of TOptions, TModel).DatabaseChecked
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepositoryBase_2_Dispose_System_Boolean_
  commentId: M:CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.Dispose(System.Boolean)
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase<TOptions, TModel>.Dispose(System.Boolean)
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase(Of TOptions, TModel).Dispose(System.Boolean)
  nameWithType: CosmoDbRepositoryBase<TOptions, TModel>.Dispose(Boolean)
  nameWithType.vb: CosmoDbRepositoryBase(Of TOptions, TModel).Dispose(Boolean)
- uid: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.Dispose*
  name: Dispose
  href: api/CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase-2.html#CG_Linq_CosmoDb_Repositories_CosmoDbRepositoryBase_2_Dispose_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase`2.Dispose
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase<TOptions, TModel>.Dispose
  fullName.vb: CG.Linq.CosmoDb.Repositories.CosmoDbRepositoryBase(Of TOptions, TModel).Dispose
  nameWithType: CosmoDbRepositoryBase<TOptions, TModel>.Dispose
  nameWithType.vb: CosmoDbRepositoryBase(Of TOptions, TModel).Dispose
- uid: CG.Linq.CosmoDb.Repositories.Options
  name: CG.Linq.CosmoDb.Repositories.Options
  href: api/CG.Linq.CosmoDb.Repositories.Options.html
  commentId: N:CG.Linq.CosmoDb.Repositories.Options
  fullName: CG.Linq.CosmoDb.Repositories.Options
  nameWithType: CG.Linq.CosmoDb.Repositories.Options
- uid: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions
  name: CosmoDbRepositoryOptions
  href: api/CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.html
  commentId: T:CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions
  fullName: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions
  nameWithType: CosmoDbRepositoryOptions
- uid: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.DatabaseId
  name: DatabaseId
  href: api/CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.html#CG_Linq_CosmoDb_Repositories_Options_CosmoDbRepositoryOptions_DatabaseId
  commentId: P:CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.DatabaseId
  fullName: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.DatabaseId
  nameWithType: CosmoDbRepositoryOptions.DatabaseId
- uid: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.DatabaseId*
  name: DatabaseId
  href: api/CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.html#CG_Linq_CosmoDb_Repositories_Options_CosmoDbRepositoryOptions_DatabaseId_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.DatabaseId
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.DatabaseId
  nameWithType: CosmoDbRepositoryOptions.DatabaseId
- uid: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.DropDatabase
  name: DropDatabase
  href: api/CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.html#CG_Linq_CosmoDb_Repositories_Options_CosmoDbRepositoryOptions_DropDatabase
  commentId: P:CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.DropDatabase
  fullName: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.DropDatabase
  nameWithType: CosmoDbRepositoryOptions.DropDatabase
- uid: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.DropDatabase*
  name: DropDatabase
  href: api/CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.html#CG_Linq_CosmoDb_Repositories_Options_CosmoDbRepositoryOptions_DropDatabase_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.DropDatabase
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.DropDatabase
  nameWithType: CosmoDbRepositoryOptions.DropDatabase
- uid: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.EnsureCreated
  name: EnsureCreated
  href: api/CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.html#CG_Linq_CosmoDb_Repositories_Options_CosmoDbRepositoryOptions_EnsureCreated
  commentId: P:CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.EnsureCreated
  fullName: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.EnsureCreated
  nameWithType: CosmoDbRepositoryOptions.EnsureCreated
- uid: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.EnsureCreated*
  name: EnsureCreated
  href: api/CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.html#CG_Linq_CosmoDb_Repositories_Options_CosmoDbRepositoryOptions_EnsureCreated_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.EnsureCreated
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.EnsureCreated
  nameWithType: CosmoDbRepositoryOptions.EnsureCreated
- uid: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.SeedDatabase
  name: SeedDatabase
  href: api/CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.html#CG_Linq_CosmoDb_Repositories_Options_CosmoDbRepositoryOptions_SeedDatabase
  commentId: P:CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.SeedDatabase
  fullName: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.SeedDatabase
  nameWithType: CosmoDbRepositoryOptions.SeedDatabase
- uid: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.SeedDatabase*
  name: SeedDatabase
  href: api/CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.html#CG_Linq_CosmoDb_Repositories_Options_CosmoDbRepositoryOptions_SeedDatabase_
  commentId: Overload:CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.SeedDatabase
  isSpec: "True"
  fullName: CG.Linq.CosmoDb.Repositories.Options.CosmoDbRepositoryOptions.SeedDatabase
  nameWithType: CosmoDbRepositoryOptions.SeedDatabase
- uid: Microsoft.AspNetCore.Builder
  name: Microsoft.AspNetCore.Builder
  href: api/Microsoft.AspNetCore.Builder.html
  commentId: N:Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
- uid: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions
  name: ApplicationBuilderExtensions
  href: api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html
  commentId: T:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions
  fullName: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions
  nameWithType: ApplicationBuilderExtensions
- uid: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseCosmoDb*
  name: UseCosmoDb
  href: api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html#Microsoft_AspNetCore_Builder_ApplicationBuilderExtensions_UseCosmoDb_
  commentId: Overload:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseCosmoDb
  isSpec: "True"
  fullName: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseCosmoDb
  nameWithType: ApplicationBuilderExtensions.UseCosmoDb
- uid: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseCosmoDb``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.AspNetCore.Builder.SeedAction{``0})
  name: UseCosmoDb<TClient, TOptions>(IApplicationBuilder, IWebHostEnvironment, SeedAction<TClient>)
  href: api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html#Microsoft_AspNetCore_Builder_ApplicationBuilderExtensions_UseCosmoDb__2_Microsoft_AspNetCore_Builder_IApplicationBuilder_Microsoft_AspNetCore_Hosting_IWebHostEnvironment_Microsoft_AspNetCore_Builder_SeedAction___0__
  commentId: M:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseCosmoDb``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.AspNetCore.Builder.SeedAction{``0})
  name.vb: UseCosmoDb(Of TClient, TOptions)(IApplicationBuilder, IWebHostEnvironment, SeedAction(Of TClient))
  fullName: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseCosmoDb<TClient, TOptions>(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Hosting.IWebHostEnvironment, Microsoft.AspNetCore.Builder.SeedAction<TClient>)
  fullName.vb: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseCosmoDb(Of TClient, TOptions)(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Hosting.IWebHostEnvironment, Microsoft.AspNetCore.Builder.SeedAction(Of TClient))
  nameWithType: ApplicationBuilderExtensions.UseCosmoDb<TClient, TOptions>(IApplicationBuilder, IWebHostEnvironment, SeedAction<TClient>)
  nameWithType.vb: ApplicationBuilderExtensions.UseCosmoDb(Of TClient, TOptions)(IApplicationBuilder, IWebHostEnvironment, SeedAction(Of TClient))
- uid: Microsoft.AspNetCore.Builder.SeedAction`1
  name: SeedAction<TClient>
  href: api/Microsoft.AspNetCore.Builder.SeedAction-1.html
  commentId: T:Microsoft.AspNetCore.Builder.SeedAction`1
  name.vb: SeedAction(Of TClient)
  fullName: Microsoft.AspNetCore.Builder.SeedAction<TClient>
  fullName.vb: Microsoft.AspNetCore.Builder.SeedAction(Of TClient)
  nameWithType: SeedAction<TClient>
  nameWithType.vb: SeedAction(Of TClient)
- uid: Microsoft.Extensions.DependencyInjection
  name: Microsoft.Extensions.DependencyInjection
  href: api/Microsoft.Extensions.DependencyInjection.html
  commentId: N:Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html
  commentId: T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCosmoDbRepositories*
  name: AddCosmoDbRepositories
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html#Microsoft_Extensions_DependencyInjection_ServiceCollectionExtensions_AddCosmoDbRepositories_
  commentId: Overload:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCosmoDbRepositories
  isSpec: "True"
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCosmoDbRepositories
  nameWithType: ServiceCollectionExtensions.AddCosmoDbRepositories
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCosmoDbRepositories``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  name: AddCosmoDbRepositories<TOptions>(IServiceCollection, IConfiguration, ServiceLifetime)
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html#Microsoft_Extensions_DependencyInjection_ServiceCollectionExtensions_AddCosmoDbRepositories__1_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_ServiceLifetime_
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCosmoDbRepositories``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  name.vb: AddCosmoDbRepositories(Of TOptions)(IServiceCollection, IConfiguration, ServiceLifetime)
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCosmoDbRepositories<TOptions>(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  fullName.vb: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCosmoDbRepositories(Of TOptions)(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  nameWithType: ServiceCollectionExtensions.AddCosmoDbRepositories<TOptions>(IServiceCollection, IConfiguration, ServiceLifetime)
  nameWithType.vb: ServiceCollectionExtensions.AddCosmoDbRepositories(Of TOptions)(IServiceCollection, IConfiguration, ServiceLifetime)
